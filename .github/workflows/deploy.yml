name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - '**/*'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build data (JSON used by pages)
        env:
          FEC_API_KEY: ${{ secrets.FEC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: npm run build:data

      - name: Assemble static site into _site
        run: |
          set -euo pipefail
          rm -rf _site
          mkdir -p _site
          for p in index.html Bills accountability assets styles.css data CNAME .nojekyll; do
            [ -e "$p" ] && rsync -a "$p" _site/ || true
          done
          touch _site/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
