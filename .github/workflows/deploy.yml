name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - '**/*'
  workflow_dispatch: {}
  # Chain deploy after the ingest workflow completes
  workflow_run:
    workflows: ["FEC Nightly Ingest"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

env:
  TZ: America/Los_Angeles

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      FEC_API_KEY: ${{ secrets.FEC_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Try to download the latest raw ingest artifact produced by the nightly ingest workflow.
      # If none exists yet, the step is allowed to fail; later steps can proceed with existing data.
      - name: Download raw ingest artifact (if available)
        id: dlraw
        uses: dawidd6/action-download-artifact@v3
        continue-on-error: true
        with:
          workflow: fec-nightly.yml           # (or the exact filename of your ingest workflow)
          name: fec-raw                       # artifact name used by ingest workflow
          path: data/raw                      # where to place downloaded raw files
          # optionally constrain to branch:
          # branch: main

      - name: Show artifact status
        run: |
          echo "downloaded? -> ${{ steps.dlraw.outcome }}"
          ls -la data || true
          ls -la data/raw || true

      # Cache node_modules by lockfile
      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node20-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      # Build members.json (fast) â€” keeps photos/bioguide in sync without hitting FEC
      - name: Build members.json
        run: npm run build:members

      # NO RAW INGEST HERE
      # Use the downloaded raw data (if present) to (re)build your marts/warehouse/site
      - name: Build warehouse
        run: npm run fec:warehouse

      - name: Build warehouse metrics
        run: npm run fec:warehouse:metrics

      - name: Build site bundles
        run: npm run fec:site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .  # root of built static site (adjust if you publish from /dist or similar)

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
